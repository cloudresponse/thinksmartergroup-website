name: Tests

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.15.0
          run_install: false

      - name: Fallback corepack activation (defensive)
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            echo "pnpm not on PATH yet – activating via corepack";
            corepack enable || true
            corepack prepare pnpm@10.15.0 --activate || true
          fi
          pnpm --version
        shell: bash

      - name: Get pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run unit tests
        run: pnpm test

  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          check-latest: true
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 10.15.0
          run_install: false

      - name: Fallback corepack activation (defensive)
        run: |
          if ! command -v pnpm >/dev/null 2>&1; then
            echo "pnpm not on PATH yet – activating via corepack";
            corepack enable || true
            corepack prepare pnpm@10.15.0 --activate || true
          fi
          pnpm --version
        shell: bash

      - name: Get pnpm store path
        id: pnpm-store
        run: echo "store=$(pnpm store path)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.store }}
          key: pnpm-store-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            pnpm-store-${{ runner.os }}-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run end-to-end tests
        run: pnpm test:e2e

      - name: Upload test results (HTML report)
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
